// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_large_stream_me_ap_fixed_ap_fixed_config50_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state1 = "1";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state2 = "10";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state3 = "100";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state4 = "1000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state5 = "10000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state6 = "100000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state12 = "100000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<34> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_2 = "10";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_3 = "11";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_4 = "100";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_5 = "101";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_6 = "110";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_7 = "111";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_8 = "1000";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_9 = "1001";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_A = "1010";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_B = "1011";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_C = "1100";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_D = "1101";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_E = "1110";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_F = "1111";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_10 = "10000";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_11 = "10001";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_12 = "10010";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_13 = "10011";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_14 = "10100";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_15 = "10101";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_16 = "10110";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_17 = "10111";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_18 = "11000";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_19 = "11001";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1A = "11010";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1B = "11011";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1C = "11100";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1D = "11101";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1E = "11110";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1F = "11111";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_20 = "100000";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_21 = "100001";
const sc_lv<32> dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_lv32_1 = "1";
const bool dense_large_stream_me_ap_fixed_ap_fixed_config50_s::ap_const_boolean_1 = true;

dense_large_stream_me_ap_fixed_ap_fixed_config50_s::dense_large_stream_me_ap_fixed_ap_fixed_config50_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35 = new dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s("grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35");
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_clk(ap_clk);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_rst(ap_rst);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_start(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_done(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_done);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_idle(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_idle);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_ready(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_ready);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_0(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_0);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_1(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_1);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_2(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_2);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_3(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_3);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_4(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_4);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_5(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_5);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_6(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_6);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_7(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_7);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_8(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_8);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_9(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_9);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_10(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_10);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_11(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_11);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_12(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_12);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_13(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_13);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_14(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_14);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_15(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_15);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_16(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_16);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_17(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_17);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_18(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_18);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_19(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_19);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_20(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_20);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_21(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_21);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_22(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_22);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_23(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_23);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_24(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_24);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_25(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_25);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_26(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_26);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_27(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_27);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_28(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_28);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_29(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_29);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_30(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_30);
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35->ap_return_31(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_31);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state12);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state13);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state14);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state15);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state16);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state17);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state18);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state19);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state1_ignore_call34);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state20);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state21);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state22);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state23);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state24);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state25);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state26);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state27);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state28);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state29);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state30);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state31);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state32);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state33);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state34);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_data_V_V_blk_n);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_data_V_V_read);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start);
    sensitive << ( grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_V_V_blk_n);
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_res_V_V_din);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_V_reg_167 );
    sensitive << ( tmp_V_1_reg_172 );
    sensitive << ( tmp_V_2_reg_177 );
    sensitive << ( tmp_V_3_reg_182 );
    sensitive << ( tmp_V_4_reg_187 );
    sensitive << ( tmp_V_5_reg_192 );
    sensitive << ( tmp_V_6_reg_197 );
    sensitive << ( tmp_V_7_reg_202 );
    sensitive << ( tmp_V_8_reg_207 );
    sensitive << ( tmp_V_9_reg_212 );
    sensitive << ( tmp_V_10_reg_217 );
    sensitive << ( tmp_V_11_reg_222 );
    sensitive << ( tmp_V_12_reg_227 );
    sensitive << ( tmp_V_13_reg_232 );
    sensitive << ( tmp_V_14_reg_237 );
    sensitive << ( tmp_V_15_reg_242 );
    sensitive << ( tmp_V_16_reg_247 );
    sensitive << ( tmp_V_17_reg_252 );
    sensitive << ( tmp_V_18_reg_257 );
    sensitive << ( tmp_V_19_reg_262 );
    sensitive << ( tmp_V_20_reg_267 );
    sensitive << ( tmp_V_21_reg_272 );
    sensitive << ( tmp_V_22_reg_277 );
    sensitive << ( tmp_V_23_reg_282 );
    sensitive << ( tmp_V_24_reg_287 );
    sensitive << ( tmp_V_25_reg_292 );
    sensitive << ( tmp_V_26_reg_297 );
    sensitive << ( tmp_V_27_reg_302 );
    sensitive << ( tmp_V_28_reg_307 );
    sensitive << ( tmp_V_29_reg_312 );
    sensitive << ( tmp_V_30_reg_317 );
    sensitive << ( tmp_V_31_reg_322 );

    SC_METHOD(thread_res_V_V_write);
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_V_empty_n );
    sensitive << ( res_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_done );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000000000000000000000000001";
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_large_stream_me_ap_fixed_ap_fixed_config50_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data_V_V_dout, "(port)data_V_V_dout");
    sc_trace(mVcdFile, data_V_V_empty_n, "(port)data_V_V_empty_n");
    sc_trace(mVcdFile, data_V_V_read, "(port)data_V_V_read");
    sc_trace(mVcdFile, res_V_V_din, "(port)res_V_V_din");
    sc_trace(mVcdFile, res_V_V_full_n, "(port)res_V_V_full_n");
    sc_trace(mVcdFile, res_V_V_write, "(port)res_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, data_V_V_blk_n, "data_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, res_V_V_blk_n, "res_V_V_blk_n");
    sc_trace(mVcdFile, tmp_V_reg_167, "tmp_V_reg_167");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_ready, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_ready");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_done, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_done");
    sc_trace(mVcdFile, tmp_V_1_reg_172, "tmp_V_1_reg_172");
    sc_trace(mVcdFile, tmp_V_2_reg_177, "tmp_V_2_reg_177");
    sc_trace(mVcdFile, tmp_V_3_reg_182, "tmp_V_3_reg_182");
    sc_trace(mVcdFile, tmp_V_4_reg_187, "tmp_V_4_reg_187");
    sc_trace(mVcdFile, tmp_V_5_reg_192, "tmp_V_5_reg_192");
    sc_trace(mVcdFile, tmp_V_6_reg_197, "tmp_V_6_reg_197");
    sc_trace(mVcdFile, tmp_V_7_reg_202, "tmp_V_7_reg_202");
    sc_trace(mVcdFile, tmp_V_8_reg_207, "tmp_V_8_reg_207");
    sc_trace(mVcdFile, tmp_V_9_reg_212, "tmp_V_9_reg_212");
    sc_trace(mVcdFile, tmp_V_10_reg_217, "tmp_V_10_reg_217");
    sc_trace(mVcdFile, tmp_V_11_reg_222, "tmp_V_11_reg_222");
    sc_trace(mVcdFile, tmp_V_12_reg_227, "tmp_V_12_reg_227");
    sc_trace(mVcdFile, tmp_V_13_reg_232, "tmp_V_13_reg_232");
    sc_trace(mVcdFile, tmp_V_14_reg_237, "tmp_V_14_reg_237");
    sc_trace(mVcdFile, tmp_V_15_reg_242, "tmp_V_15_reg_242");
    sc_trace(mVcdFile, tmp_V_16_reg_247, "tmp_V_16_reg_247");
    sc_trace(mVcdFile, tmp_V_17_reg_252, "tmp_V_17_reg_252");
    sc_trace(mVcdFile, tmp_V_18_reg_257, "tmp_V_18_reg_257");
    sc_trace(mVcdFile, tmp_V_19_reg_262, "tmp_V_19_reg_262");
    sc_trace(mVcdFile, tmp_V_20_reg_267, "tmp_V_20_reg_267");
    sc_trace(mVcdFile, tmp_V_21_reg_272, "tmp_V_21_reg_272");
    sc_trace(mVcdFile, tmp_V_22_reg_277, "tmp_V_22_reg_277");
    sc_trace(mVcdFile, tmp_V_23_reg_282, "tmp_V_23_reg_282");
    sc_trace(mVcdFile, tmp_V_24_reg_287, "tmp_V_24_reg_287");
    sc_trace(mVcdFile, tmp_V_25_reg_292, "tmp_V_25_reg_292");
    sc_trace(mVcdFile, tmp_V_26_reg_297, "tmp_V_26_reg_297");
    sc_trace(mVcdFile, tmp_V_27_reg_302, "tmp_V_27_reg_302");
    sc_trace(mVcdFile, tmp_V_28_reg_307, "tmp_V_28_reg_307");
    sc_trace(mVcdFile, tmp_V_29_reg_312, "tmp_V_29_reg_312");
    sc_trace(mVcdFile, tmp_V_30_reg_317, "tmp_V_30_reg_317");
    sc_trace(mVcdFile, tmp_V_31_reg_322, "tmp_V_31_reg_322");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_idle, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_idle");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_0, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_0");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_1, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_1");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_2, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_2");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_3, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_3");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_4, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_4");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_5, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_5");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_6, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_6");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_7, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_7");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_8, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_8");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_9, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_9");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_10, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_10");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_11, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_11");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_12, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_12");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_13, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_13");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_14, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_14");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_15, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_15");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_16, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_16");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_17, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_17");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_18, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_18");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_19, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_19");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_20, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_20");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_21, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_21");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_22, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_22");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_23, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_23");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_24, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_24");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_25, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_25");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_26, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_26");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_27, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_27");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_28, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_28");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_29, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_29");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_30, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_30");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_31, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_31");
    sc_trace(mVcdFile, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg, "grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call34, "ap_block_state1_ignore_call34");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, ap_block_state12, "ap_block_state12");
    sc_trace(mVcdFile, ap_block_state13, "ap_block_state13");
    sc_trace(mVcdFile, ap_block_state14, "ap_block_state14");
    sc_trace(mVcdFile, ap_block_state15, "ap_block_state15");
    sc_trace(mVcdFile, ap_block_state16, "ap_block_state16");
    sc_trace(mVcdFile, ap_block_state17, "ap_block_state17");
    sc_trace(mVcdFile, ap_block_state18, "ap_block_state18");
    sc_trace(mVcdFile, ap_block_state19, "ap_block_state19");
    sc_trace(mVcdFile, ap_block_state20, "ap_block_state20");
    sc_trace(mVcdFile, ap_block_state21, "ap_block_state21");
    sc_trace(mVcdFile, ap_block_state22, "ap_block_state22");
    sc_trace(mVcdFile, ap_block_state23, "ap_block_state23");
    sc_trace(mVcdFile, ap_block_state24, "ap_block_state24");
    sc_trace(mVcdFile, ap_block_state25, "ap_block_state25");
    sc_trace(mVcdFile, ap_block_state26, "ap_block_state26");
    sc_trace(mVcdFile, ap_block_state27, "ap_block_state27");
    sc_trace(mVcdFile, ap_block_state28, "ap_block_state28");
    sc_trace(mVcdFile, ap_block_state29, "ap_block_state29");
    sc_trace(mVcdFile, ap_block_state30, "ap_block_state30");
    sc_trace(mVcdFile, ap_block_state31, "ap_block_state31");
    sc_trace(mVcdFile, ap_block_state32, "ap_block_state32");
    sc_trace(mVcdFile, ap_block_state33, "ap_block_state33");
    sc_trace(mVcdFile, ap_block_state34, "ap_block_state34");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
#endif

    }
}

dense_large_stream_me_ap_fixed_ap_fixed_config50_s::~dense_large_stream_me_ap_fixed_ap_fixed_config50_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35;
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_ready.read())) {
            grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_done.read(), ap_const_logic_1))) {
        tmp_V_10_reg_217 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_10.read();
        tmp_V_11_reg_222 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_11.read();
        tmp_V_12_reg_227 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_12.read();
        tmp_V_13_reg_232 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_13.read();
        tmp_V_14_reg_237 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_14.read();
        tmp_V_15_reg_242 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_15.read();
        tmp_V_16_reg_247 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_16.read();
        tmp_V_17_reg_252 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_17.read();
        tmp_V_18_reg_257 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_18.read();
        tmp_V_19_reg_262 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_19.read();
        tmp_V_1_reg_172 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_1.read();
        tmp_V_20_reg_267 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_20.read();
        tmp_V_21_reg_272 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_21.read();
        tmp_V_22_reg_277 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_22.read();
        tmp_V_23_reg_282 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_23.read();
        tmp_V_24_reg_287 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_24.read();
        tmp_V_25_reg_292 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_25.read();
        tmp_V_26_reg_297 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_26.read();
        tmp_V_27_reg_302 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_27.read();
        tmp_V_28_reg_307 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_28.read();
        tmp_V_29_reg_312 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_29.read();
        tmp_V_2_reg_177 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_2.read();
        tmp_V_30_reg_317 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_30.read();
        tmp_V_31_reg_322 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_31.read();
        tmp_V_3_reg_182 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_3.read();
        tmp_V_4_reg_187 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_4.read();
        tmp_V_5_reg_192 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_5.read();
        tmp_V_6_reg_197 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_6.read();
        tmp_V_7_reg_202 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_7.read();
        tmp_V_8_reg_207 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_8.read();
        tmp_V_9_reg_212 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_9.read();
        tmp_V_reg_167 = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_return_0.read();
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state11() {
    ap_block_state11 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state12() {
    ap_block_state12 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state13() {
    ap_block_state13 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state14() {
    ap_block_state14 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state15() {
    ap_block_state15 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state16() {
    ap_block_state16 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state17() {
    ap_block_state17 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state18() {
    ap_block_state18 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state19() {
    ap_block_state19 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state1_ignore_call34() {
    ap_block_state1_ignore_call34 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state20() {
    ap_block_state20 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state21() {
    ap_block_state21 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state22() {
    ap_block_state22 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state23() {
    ap_block_state23 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state24() {
    ap_block_state24 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state25() {
    ap_block_state25 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state26() {
    ap_block_state26 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state27() {
    ap_block_state27 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state28() {
    ap_block_state28 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state29() {
    ap_block_state29 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state30() {
    ap_block_state30 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state31() {
    ap_block_state31 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state32() {
    ap_block_state32 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state33() {
    ap_block_state33 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state34() {
    ap_block_state34 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()));
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_data_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        data_V_V_blk_n = data_V_V_empty_n.read();
    } else {
        data_V_V_blk_n = ap_const_logic_1;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_data_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))))) {
        data_V_V_read = ap_const_logic_1;
    } else {
        data_V_V_read = ap_const_logic_0;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start() {
    grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start = grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_start_reg.read();
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_res_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        res_V_V_blk_n = res_V_V_full_n.read();
    } else {
        res_V_V_blk_n = ap_const_logic_1;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_res_V_V_din() {
    if (!(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
            res_V_V_din = tmp_V_31_reg_322.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
            res_V_V_din = tmp_V_30_reg_317.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
            res_V_V_din = tmp_V_29_reg_312.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            res_V_V_din = tmp_V_28_reg_307.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
            res_V_V_din = tmp_V_27_reg_302.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
            res_V_V_din = tmp_V_26_reg_297.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
            res_V_V_din = tmp_V_25_reg_292.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            res_V_V_din = tmp_V_24_reg_287.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            res_V_V_din = tmp_V_23_reg_282.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            res_V_V_din = tmp_V_22_reg_277.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            res_V_V_din = tmp_V_21_reg_272.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
            res_V_V_din = tmp_V_20_reg_267.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
            res_V_V_din = tmp_V_19_reg_262.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            res_V_V_din = tmp_V_18_reg_257.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            res_V_V_din = tmp_V_17_reg_252.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
            res_V_V_din = tmp_V_16_reg_247.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            res_V_V_din = tmp_V_15_reg_242.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            res_V_V_din = tmp_V_14_reg_237.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            res_V_V_din = tmp_V_13_reg_232.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
            res_V_V_din = tmp_V_12_reg_227.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            res_V_V_din = tmp_V_11_reg_222.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            res_V_V_din = tmp_V_10_reg_217.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            res_V_V_din = tmp_V_9_reg_212.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            res_V_V_din = tmp_V_8_reg_207.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            res_V_V_din = tmp_V_7_reg_202.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            res_V_V_din = tmp_V_6_reg_197.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            res_V_V_din = tmp_V_5_reg_192.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            res_V_V_din = tmp_V_4_reg_187.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            res_V_V_din = tmp_V_3_reg_182.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            res_V_V_din = tmp_V_2_reg_177.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            res_V_V_din = tmp_V_1_reg_172.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            res_V_V_din = tmp_V_reg_167.read();
        } else {
            res_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        res_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_res_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read()))))) {
        res_V_V_write = ap_const_logic_1;
    } else {
        res_V_V_write = ap_const_logic_0;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_start_out() {
    start_out = real_start.read();
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void dense_large_stream_me_ap_fixed_ap_fixed_config50_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_dense_large_ap_fixed_ap_fixed_32_16_5_3_0_config50_s_fu_35_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<34>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

